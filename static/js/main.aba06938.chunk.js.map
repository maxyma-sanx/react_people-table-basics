{"version":3,"sources":["App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","types/Error.ts","context/PeopleContext.tsx","utils/getPreparedPeople.tsx","components/ErrorNotification/ErrorNotification.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PersonList/PersonList.tsx","pages/PeoplePage.tsx","routes/Root.tsx","index.tsx"],"names":["getClassName","isActive","classNames","App","className","role","to","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Error","PeopleContext","createContext","people","setPeople","errorMessage","setErrorMessage","loading","setLoading","PeopleProvider","children","useState","useEffect","peopleFromServer","length","peopleWithParents","map","person","mother","find","personMother","motherName","name","father","personFather","fatherName","getPreparedPeople","DATA","catch","SERVER","finally","value","useMemo","Provider","ErrorNotification","useContext","Loader","PersonLink","sex","slug","PersonItem","born","died","personSlug","useParams","PersonList","PeoplePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aba06938.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst getClassName = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getClassName}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={getClassName}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum Error {\n  SERVER = 'Something went wrong',\n  DATA = 'There are no people on the server',\n}\n","import {\n  PropsWithChildren,\n  createContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { getPeople } from '../api';\n\nimport { Error, Person } from '../types';\n\nimport { getPreparedPeople } from '../utils/getPreparedPeople';\n\ninterface Context {\n  people: Person[];\n  setPeople: (people: Person[]) => void,\n  errorMessage: Error | null,\n  setErrorMessage: (message: Error | null) => void,\n  loading: boolean,\n  setLoading: (status: boolean) => void,\n}\n\nexport const PeopleContext = createContext<Context>({\n  people: [],\n  setPeople: () => { },\n  errorMessage: null,\n  setErrorMessage: () => { },\n  loading: false,\n  setLoading: () => { },\n});\n\nexport const PeopleProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState<null | Error>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        if (peopleFromServer.length === 0) {\n          setErrorMessage(Error.DATA);\n\n          return;\n        }\n\n        const peopleWithParents = getPreparedPeople(peopleFromServer);\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => setErrorMessage(Error.SERVER))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      people,\n      setPeople,\n      errorMessage,\n      setErrorMessage,\n      loading,\n      setLoading,\n    };\n  }, [people, errorMessage, loading]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]) => {\n  const preparedPeople = people.map(person => {\n    const mother = people\n      .find(personMother => person.motherName === personMother.name);\n    const father = people\n      .find(personFather => person.fatherName === personFather.name);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return preparedPeople;\n};\n","import { useContext } from 'react';\n\nimport { Error } from '../../types/Error';\n\nimport { PeopleContext } from '../../context/PeopleContext';\n\nexport const ErrorNotification = () => {\n  const { errorMessage } = useContext(PeopleContext);\n\n  return (\n    <>\n      {errorMessage === Error.SERVER && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {errorMessage}\n        </p>\n      )}\n\n      {errorMessage === Error.DATA && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`../${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug: personSlug,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${personSlug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          `${motherName || '-'}`\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          `${fatherName || '-'}`\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useContext } from 'react';\n\nimport { PeopleContext } from '../../context/PeopleContext';\n\nimport { PersonItem } from '../PersonItem';\n\nexport const PersonList = () => {\n  const { people } = useContext(PeopleContext);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => <PersonItem key={person.slug} person={person} />)}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\n\nimport { PeopleContext } from '../context/PeopleContext';\n\nimport { Loader, PersonList, ErrorNotification } from '../components';\n\nexport const PeoplePage = () => {\n  const { loading, errorMessage } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? <Loader /> : (\n            <>\n              {errorMessage && <ErrorNotification />}\n\n              {!errorMessage && <PersonList />}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { App } from '../App';\n\nimport { HomePage } from '../pages/HomePage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\nimport { PeoplePage } from '../pages/PeoplePage';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './routes/Root';\nimport { PeopleProvider } from './context/PeopleContext';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <PeopleProvider>\n      <Root />\n    </PeopleProvider>,\n  );\n"],"sourceRoot":""}